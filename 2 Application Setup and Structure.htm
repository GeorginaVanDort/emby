<!DOCTYPE html>
<!-- saved from url=(0085)https://www.learnhowtoprogram.com/javascript/ember-js/application-setup-and-structure -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Application Setup and Structure</title>

<script type="text/javascript" src="./Application Setup and Structure_files/48356a79ca"></script><script src="./Application Setup and Structure_files/nr-963.min.js"></script><script type="text/javascript" async="" src="./Application Setup and Structure_files/ga.js"></script><script async="" src="./Application Setup and Structure_files/cloudflare.min.js"></script><script type="text/javascript">
//<![CDATA[
try{if (!window.CloudFlare) {var CloudFlare=[{verbose:0,p:0,byc:0,owlid:"cf",bag2:1,mirage2:0,oracle:0,paths:{cloudflare:"/cdn-cgi/nexp/dok3v=1613a3a185/"},atok:"6eaee1a1762d23df434cf746d5ab170c",petok:"1370c17d1024fbfe9eb5ea203ac6bc575ef16ba4-1471040444-1800",zone:"learnhowtoprogram.com",rocket:"0",apps:{"ga_key":{"ua":"UA-37469895-2","ga_bs":"1"}},sha2test:0}];!function(a,b){a=document.createElement("script"),b=document.getElementsByTagName("script")[0],a.async=!0,a.src="//ajax.cloudflare.com/cdn-cgi/nexp/dok3v=0489c402f5/cloudflare.min.js",b.parentNode.insertBefore(a,b)}()}}catch(e){};
//]]>
</script>
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"48356a79ca","applicationID":"1386295","transactionName":"IAwPEhQNWVxUFx5VUBAQDggVTUZYXhI=","queueTime":9,"applicationTime":91,"agent":""}</script>
<script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(u(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(2),u=t(3),c=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var s=["setPageViewName","setCustomAttribute","finished","addToTrace","inlineHit"],p="api-",l=p+"ixn-";a(s,function(t,e){f[e]=o(p+e,!0,"api")}),f.addPageAction=o(p+"addPageAction",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var d=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(c.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{c.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){d[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],2:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],3:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?u(t,a,i):i()}function n(n,r,o){t&&t(n,r,o);for(var i=e(o),a=l(n),u=a.length,c=0;c<u;c++)a[c].apply(i,r);var s=f[m[n]];return s&&s.push([w,n,r,i]),i}function p(t,e){g[t]=l(t).concat(e)}function l(t){return g[t]||[]}function d(t){return s[t]=s[t]||o(n)}function v(t,e){c(t,function(t,n){e=e||"feature",m[n]=e,e in f||(f[e]=[])})}var g={},m={},w={on:p,emit:n,get:d,listeners:l,context:e,buffer:v};return w}function i(){return new r}var a="nr@context",u=t("gos"),c=t(2),f={},s={},p=e.exports=o();p.backlog=f},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!h++){var t=y.info=NREUM.info,e=s.getElementsByTagName("script")[0];if(t&&t.licenseKey&&t.applicationID&&e){c(m,function(e,n){t[e]||(t[e]=n)});var n="https"===g.split(":")[0]||t.sslForHttp;y.proto=n?"https://":"http://",u("mark",["onload",a()],null,"api");var r=s.createElement("script");r.src=y.proto+t.agent,e.parentNode.insertBefore(r,e)}}}function o(){"complete"===s.readyState&&i()}function i(){u("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var u=t("handle"),c=t(2),f=window,s=f.document,p="addEventListener",l="attachEvent",d=f.XMLHttpRequest,v=d&&d.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:d,REQ:f.Request,EV:f.Event,PR:f.Promise,MO:f.MutationObserver},t(1);var g=""+location,m={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-963.min.js"},w=d&&v&&v[p]&&!/CriOS/.test(navigator.userAgent),y=e.exports={offset:a(),origin:g,features:{},xhrWrappable:w};s[p]?(s[p]("DOMContentLoaded",i,!1),f[p]("load",r,!1)):(s[l]("onreadystatechange",o),f[l]("onload",r)),u("mark",["firstbyte",a()],null,"api");var h=0},{}]},{},["loader"]);</script>
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!--[if lt IE 9]>
    <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->
<meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="7fDpvYx9YzvyyXjNUt2zzjiX0ZfqpDWbIwfaNCO27XF6y46I7qARLM0MiZEjDkrRoKrOgX7aesuCbu/xgoqZSg==">
<link rel="stylesheet" media="all" href="./Application Setup and Structure_files/application-11aae51317641930eeb93a7f6ccc38b6bc6ecf53c449c0273d59effa73f919a3.css">
<link href="./Application Setup and Structure_files/css" rel="stylesheet" type="text/css">
<script src="./Application Setup and Structure_files/application-290b9e2f856c15ef7f99c69b163d3e246213cdbe7b19fff57b40e2094d15979c.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-37469895-2']);
_gaq.push(['_trackPageview']);

(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

/* ]]> */
</script>
<style type="text/css">.cf-hidden { display: none; } .cf-invisible { visibility: hidden; }</style><style id="fit-vids-style">.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style><style type="text/css" media="print">.usabilla_live_button_container { display: none; }</style></head>
<body><div id="lightningjs-usabilla_live" style="display: none;"><div><iframe frameborder="0" id="lightningjs-frame-usabilla_live" src="./Application Setup and Structure_files/saved_resource.html"></iframe></div></div>
<div class="container">
<div class="row">
<div class="col-xs-12">
<span class="label label-info">Lesson</span>
<span class="label label-primary">Weekend</span>
<ul class="breadcrumb">
<li><a href="https://www.learnhowtoprogram.com/javascript">JavaScript</a></li>
<li><a href="https://www.learnhowtoprogram.com/javascript/ember-js">Ember JS</a></li>
<li class="active">Application Setup and Structure</li>
</ul>
<ul class="nav nav-tabs">
<li class="active"><a href="https://www.learnhowtoprogram.com/javascript/ember-js/application-setup-and-structure#text" data-toggle="tab">Text</a></li>
<li><a href="https://www.learnhowtoprogram.com/javascript/ember-js/application-setup-and-structure#cheat-sheet" data-toggle="tab">Cheat sheet</a></li>
</ul>
<div class="tab-content">
<div class="tab-pane active in" id="text">
<p>Ember implements the idea of "convention over configuration" in its design, opting to minimize the amount of configuration necessary to get an application up and running. Instead, it relies on consistent naming convention to match corresponding portions of the application. </p>
<p>To do this, a number of peripheral tasks to application development have been streamlined, such as testing, compiling, and serving files. This allows Ember developers to focus on building apps rather than building the support structures that make them run. </p>
<p>Ember includes a <em>command line interface</em> called Ember CLI with helpful tools that are immediately available at our fingertips!</p>
<h2>Ember Help</h2>
<p>In the terminal, a quick <code class="prettyprint prettyprinted"><span class="pln">ember </span><span class="pun">--</span><span class="pln">help</span></code> will display the commands available. For more information on a specific command, type <code class="prettyprint prettyprinted"><span class="pln">ember help command</span><span class="pun">-</span><span class="pln">name</span></code>. This shows us the details of how and when the command is used.</p>
<h2>Creating a New Ember App</h2>
<p>To start our new project called <code class="prettyprint prettyprinted"><span class="kwd">super</span><span class="pun">-</span><span class="pln">rentals</span></code>, we'll navigate to the directory we'd like our app located in (most likely the Desktop) and use the <code class="prettyprint prettyprinted"><span class="kwd">new</span></code> command:</p>
<pre><code class="prettyprint lang-shell prettyprinted"><span class="pln">$ ember </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">super</span><span class="pun">-</span><span class="pln">rentals</span></code></pre>
<h2>The Ember CLI Directory Structure</h2>
<p>The <code class="prettyprint prettyprinted"><span class="kwd">new</span></code> command generates a project structure with the following files and directories:</p>
<pre><code class="prettyprint lang-text prettyprinted"><span class="pun">|--</span><span class="pln">app
</span><span class="pun">|--</span><span class="pln">bower</span><span class="pun">-</span><span class="pln">components
</span><span class="pun">|--</span><span class="pln">config
</span><span class="pun">|--</span><span class="pln">dist
</span><span class="pun">|--</span><span class="pln">node_modules
</span><span class="pun">|--</span><span class="kwd">public</span><span class="pln">
</span><span class="pun">|--</span><span class="pln">tests
</span><span class="pun">|--</span><span class="pln">tmp
</span><span class="pun">|--</span><span class="pln">vendor

bower</span><span class="pun">.</span><span class="pln">json
ember</span><span class="pun">-</span><span class="pln">cli</span><span class="pun">-</span><span class="pln">build</span><span class="pun">.</span><span class="pln">js
</span><span class="kwd">package</span><span class="pun">.</span><span class="pln">json
README</span><span class="pun">.</span><span class="pln">md
testem</span><span class="pun">.</span><span class="pln">json</span></code></pre>
<p>Let's take a brief look at the anatomy of an Ember application:</p>
<p><strong>app</strong>: This is where folders and files for models, components, routes, templates and styles are stored. The vast majority of our coding happens in this folder.</p>
<p><strong>bower-components / bower.json</strong>: <strong>bower</strong> is a dependency management tool. It is used to manage front-end plugins and component dependencies (HTML, CSS, JavaScript, etc). All bower components are installed in the bower-components directory. If we open <code class="prettyprint prettyprinted"><span class="pln">bower</span><span class="pun">.</span><span class="pln">json</span></code>, we see the list of dependencies that are installed by Ember automatically. These include Ember, jQuery, Ember Data and QUnit (for testing). If we add additional front-end dependencies, like <code class="prettyprint prettyprinted"><span class="pln">bootstrap</span></code>, they will also be listed here and their files added to the <code class="prettyprint prettyprinted"><span class="pln">bower</span><span class="pun">-</span><span class="pln">components</span></code> directory. </p>
<p><strong>config</strong>: Contains the <em>environment.js</em> file which lists environmental settings and configurations for our app. We'll look at this more closely later.</p>
<p><strong>dist</strong>: When an app is built for deployment, the output files will reside here.</p>
<p><strong>node_modules / package.json</strong>: This directory and file are from <strong>npm</strong>. <em>npm</em> is the package manager for Node.js. Ember is built with Node and uses a variety of Node.js modules for operation. The <em>package.json</em> file comes pre-loaded with a list of current packages Ember requires. Any Ember-CLI add-ons you install will also show up here. Packages listed in <code class="prettyprint prettyprinted"><span class="kwd">package</span><span class="pun">.</span><span class="pln">json</span></code> are installed in the node_modules directory.</p>
<p><strong>public</strong>: This directory contains assets such as images and fonts.</p>
<p><strong>vendor</strong>: This directory is where any front-end dependencies NOT managed by bower reside.</p>
<p><strong>tests / testem.json</strong>: Contains automated tests for our app. Ember CLI's test runner <strong>testem</strong> is also configured in <code class="prettyprint prettyprinted"><span class="pln">testem</span><span class="pun">.</span><span class="pln">json</span></code>.</p>
<p><strong>tmp</strong>: Temporary files live here.</p>
<p><strong>ember-cli-build.js</strong>: Behind the scenes, Ember CLI uses a tool called Broccoli to compile our code. This file contains settings for how Broccoli should build our app.</p>
<h2>ES6 Modules</h2>
<p>If you take a look at an Ember application file (We'll use <code class="prettyprint prettyprinted"><span class="pln">app</span><span class="pun">/</span><span class="pln">router</span><span class="pun">.</span><span class="pln">js</span></code> as an example), you'll notice some syntax that may be unfamiliar to you. </p>
<div class="filename">app/router.js</div>
<pre><code class="prettyprint lang-javascript prettyprinted"><span class="kwd">import</span><span class="pln"> </span><span class="typ">Ember</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'ember'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> config </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./config/environment'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">const</span><span class="pln"> </span><span class="typ">Router</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Ember</span><span class="pun">.</span><span class="typ">Router</span><span class="pun">.</span><span class="pln">extend</span><span class="pun">({</span><span class="pln">
  location</span><span class="pun">:</span><span class="pln"> config</span><span class="pun">.</span><span class="pln">locationType
</span><span class="pun">});</span><span class="pln">

</span><span class="typ">Router</span><span class="pun">.</span><span class="pln">map</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
</span><span class="pun">});</span><span class="pln">

</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Router</span><span class="pun">;</span></code></pre>
<p>Ember CLI uses <a href="http://www.ecma-international.org/ecma-262/6.0/">ECMAScript 6</a> (or ES6 for short) modules to organize application code.
For example, the line <code class="prettyprint prettyprinted"><span class="kwd">import</span><span class="pln"> </span><span class="typ">Ember</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'ember'</span><span class="pun">;</span></code> gives us access to the actual Ember.js library as the variable <code class="prettyprint prettyprinted"><span class="typ">Ember</span></code>. And the <code class="prettyprint prettyprinted"><span class="kwd">import</span><span class="pln"> config </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./config/environment'</span><span class="pun">;</span></code> line provides access to our app's configuration data as the variable <code class="prettyprint prettyprinted"><span class="pln">config</span></code>. The line <code class="prettyprint prettyprinted"><span class="kwd">const</span><span class="pln"> </span><span class="typ">Router</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Ember</span><span class="pun">.</span><span class="typ">Router</span><span class="pun">...</span></code>. defines a constant called <code class="prettyprint prettyprinted"><span class="typ">Router</span></code>. (A <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const">constant</a> is essentially a variable whose value cannot be re-assigned). At the end of the file, <code class="prettyprint prettyprinted"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Router</span><span class="pun">;</span></code> makes this <code class="prettyprint prettyprinted"><span class="typ">Router</span></code> constant available to other parts of the application, similar to the fashion we've exported modules in previous weeks. </p>
<h2>Starting the Ember Development Server</h2>
<p>Once we have a new project in place, we can confirm everything is working by launching the Ember development server:</p>
<pre><code class="prettyprint lang-shell prettyprinted"><span class="pln">ember server</span></code></pre>
<p>or, for short:</p>
<pre><code class="prettyprint lang-shell prettyprinted"><span class="pln">ember s</span></code></pre>
<p>If we navigate to <code class="prettyprint prettyprinted"><span class="pln">localhost</span><span class="pun">:</span><span class="lit">4200</span></code>, we'll see "Welcome to Ember.js".</p>
</div>
<div class="tab-pane" id="cheat-sheet">
<h2>Overview</h2>
<p></p><hr><p></p>
<p>Ember Application Setup:</p>
<ul>
<li>Ember builds all the support structures for you. </li>
<li>It automatically generates app/router.js </li>
</ul>
<p>To create a new Ember app and its project folder named <code class="prettyprint prettyprinted"><span class="pln">app</span><span class="pun">-</span><span class="pln">name</span></code> enter this command: </p>
<pre><code class="prettyprint prettyprinted"><span class="pln">$ ember </span><span class="kwd">new</span><span class="pln"> app</span><span class="pun">-</span><span class="pln">name</span></code></pre>
<p>To start the server: </p>
<pre><code class="prettyprint prettyprinted"><span class="pln">$ ember server </span></code></pre>
<p>or shorthand: </p>
<pre><code class="prettyprint prettyprinted"><span class="pln">$ ember s </span></code></pre>
<p>App appears at localhost:4200 and it displays <code class="prettyprint prettyprinted"><span class="pln">application</span><span class="pun">.</span><span class="pln">hbs</span></code>. </p>
</div>
</div>
</div>
</div>
</div>
<nav class="navbar navbar-default navbar-fixed-top">
<div class="container">
<div class="navbar-header">
<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
<span class="sr-only">Toggle navigation</span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button>
<a class="navbar-brand" href="https://www.learnhowtoprogram.com/courses">Courses</a>
</div>
<div id="navbar" class="collapse navbar-collapse">
<ul class="nav navbar-nav">
<li> </li><li><a href="https://www.learnhowtoprogram.com/javascript/ember-js/ember-core-concepts">Previous</a></li>
<li><a href="https://www.learnhowtoprogram.com/javascript/ember-js/routes-and-templates">Next</a></li>

</ul>
<ul class="nav navbar-nav pull-right">
<li id="navbar-search">
<form class="navbar-form navbar-left" action="https://www.learnhowtoprogram.com/lessons" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="✓">
<div class="input-group">
<input type="text" name="search" id="search" placeholder="Search lessons" class="form-control">
<div class="input-group-btn">
<input type="submit" name="commit" value="Search" class="btn btn-info">
</div>
</div>
</form> </li>
</ul>
</div>
</div>
</nav>
<footer class="footer">
<div class="container">
<p>© 2016 <a href="http://www.epicodus.com/">Epicodus</a>, Inc.</p>
</div>
</footer>
 
<script type="text/javascript">/*{literal}<![CDATA[*/window.lightningjs||function(c){function g(b,d){d&&(d+=(/\?/.test(d)?"&":"?")+"lv=1");c[b]||function(){var i=window,h=document,j=b,g=h.location.protocol,l="load",k=0;(function(){function b(){a.P(l);a.w=1;c[j]("_load")}c[j]=function(){function m(){m.id=e;return c[j].apply(m,arguments)}var b,e=++k;b=this&&this!=i?this.id||0:0;(a.s=a.s||[]).push([e,b,arguments]);m.then=function(b,c,h){var d=a.fh[e]=a.fh[e]||[],j=a.eh[e]=a.eh[e]||[],f=a.ph[e]=a.ph[e]||[];b&&d.push(b);c&&j.push(c);h&&f.push(h);return m};return m};var a=c[j]._={};a.fh={};a.eh={};a.ph={};a.l=d?d.replace(/^\/\//,(g=="https:"?g:"http:")+"//"):d;a.p={0:+new Date};a.P=function(b){a.p[b]=new Date-a.p[0]};a.w&&b();i.addEventListener?i.addEventListener(l,b,!1):i.attachEvent("on"+l,b);var q=function(){function b(){return["<head></head><",c,' onload="var d=',n,";d.getElementsByTagName('head')[0].",d,"(d.",g,"('script')).",i,"='",a.l,"'\"></",c,">"].join("")}var c="body",e=h[c];if(!e)return setTimeout(q,100);a.P(1);var d="appendChild",g="createElement",i="src",k=h[g]("div"),l=k[d](h[g]("div")),f=h[g]("iframe"),n="document",p;k.style.display="none";e.insertBefore(k,e.firstChild).id=o+"-"+j;f.frameBorder="0";f.id=o+"-frame-"+j;/MSIE[ ]+6/.test(navigator.userAgent)&&(f[i]="javascript:false");f.allowTransparency="true";l[d](f);try{f.contentWindow[n].open()}catch(s){a.domain=h.domain,p="javascript:var d="+n+".open();d.domain='"+h.domain+"';",f[i]=p+"void(0);"}try{var r=f.contentWindow[n];r.write(b());r.close()}catch(t){f[i]=p+'d.write("'+b().replace(/"/g,String.fromCharCode(92)+'"')+'");d.close();'}a.P(2)};a.l&&setTimeout(q,0)})()}();c[b].lv="1";return c[b]}var o="lightningjs",k=window[o]=g(o);k.require=g;k.modules=c}({});
    window.usabilla_live = lightningjs.require("usabilla_live", "//w.usabilla.com/a5a2c64ff5b8.js");
    /*]]>{/literal}*/</script>
 


<div class="usabilla_live_button_container" tabindex="0" aria-hidden="true" style="right:0px;top:50%;margin-top:-65px;position:fixed;width:39px;height:130px;z-index:999"><iframe src="./Application Setup and Structure_files/saved_resource(1).html" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" data-tags="right" title="Visual Feedback Button" style="width: 39px; height: 130px; margin: 0px; padding: 0px; border: 0px; overflow: hidden; z-index: 9998; position: absolute; left: 0px; top: 0px; box-shadow: 0px 0px 0px; background-color: transparent;"></iframe></div></body></html>