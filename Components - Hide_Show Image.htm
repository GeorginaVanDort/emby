<!DOCTYPE html>
<!-- saved from url=(0080)https://www.learnhowtoprogram.com/javascript/ember-js/components-hide-show-image -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Components - Hide/Show Image</title>

<script type="text/javascript" src="./Components - Hide_Show Image_files/48356a79ca"></script><script src="./Components - Hide_Show Image_files/nr-963.min.js"></script><script type="text/javascript" async="" src="./Components - Hide_Show Image_files/ga.js"></script><script async="" src="./Components - Hide_Show Image_files/cloudflare.min.js"></script><script type="text/javascript">
//<![CDATA[
try{if (!window.CloudFlare) {var CloudFlare=[{verbose:0,p:0,byc:0,owlid:"cf",bag2:1,mirage2:0,oracle:0,paths:{cloudflare:"/cdn-cgi/nexp/dok3v=1613a3a185/"},atok:"6eaee1a1762d23df434cf746d5ab170c",petok:"18174965acc1b241d3981a7280b82de82cd45370-1471040488-1800",zone:"learnhowtoprogram.com",rocket:"0",apps:{"ga_key":{"ua":"UA-37469895-2","ga_bs":"1"}},sha2test:0}];!function(a,b){a=document.createElement("script"),b=document.getElementsByTagName("script")[0],a.async=!0,a.src="//ajax.cloudflare.com/cdn-cgi/nexp/dok3v=0489c402f5/cloudflare.min.js",b.parentNode.insertBefore(a,b)}()}}catch(e){};
//]]>
</script>
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"48356a79ca","applicationID":"1386295","transactionName":"IAwPEhQNWVxUFx5VUBAQDggVTUZYXhI=","queueTime":14,"applicationTime":154,"agent":""}</script>
<script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(u(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(2),u=t(3),c=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var s=["setPageViewName","setCustomAttribute","finished","addToTrace","inlineHit"],p="api-",l=p+"ixn-";a(s,function(t,e){f[e]=o(p+e,!0,"api")}),f.addPageAction=o(p+"addPageAction",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var d=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(c.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{c.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){d[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],2:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],3:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?u(t,a,i):i()}function n(n,r,o){t&&t(n,r,o);for(var i=e(o),a=l(n),u=a.length,c=0;c<u;c++)a[c].apply(i,r);var s=f[m[n]];return s&&s.push([w,n,r,i]),i}function p(t,e){g[t]=l(t).concat(e)}function l(t){return g[t]||[]}function d(t){return s[t]=s[t]||o(n)}function v(t,e){c(t,function(t,n){e=e||"feature",m[n]=e,e in f||(f[e]=[])})}var g={},m={},w={on:p,emit:n,get:d,listeners:l,context:e,buffer:v};return w}function i(){return new r}var a="nr@context",u=t("gos"),c=t(2),f={},s={},p=e.exports=o();p.backlog=f},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!h++){var t=y.info=NREUM.info,e=s.getElementsByTagName("script")[0];if(t&&t.licenseKey&&t.applicationID&&e){c(m,function(e,n){t[e]||(t[e]=n)});var n="https"===g.split(":")[0]||t.sslForHttp;y.proto=n?"https://":"http://",u("mark",["onload",a()],null,"api");var r=s.createElement("script");r.src=y.proto+t.agent,e.parentNode.insertBefore(r,e)}}}function o(){"complete"===s.readyState&&i()}function i(){u("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var u=t("handle"),c=t(2),f=window,s=f.document,p="addEventListener",l="attachEvent",d=f.XMLHttpRequest,v=d&&d.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:d,REQ:f.Request,EV:f.Event,PR:f.Promise,MO:f.MutationObserver},t(1);var g=""+location,m={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-963.min.js"},w=d&&v&&v[p]&&!/CriOS/.test(navigator.userAgent),y=e.exports={offset:a(),origin:g,features:{},xhrWrappable:w};s[p]?(s[p]("DOMContentLoaded",i,!1),f[p]("load",r,!1)):(s[l]("onreadystatechange",o),f[l]("onload",r)),u("mark",["firstbyte",a()],null,"api");var h=0},{}]},{},["loader"]);</script>
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!--[if lt IE 9]>
    <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->
<meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="zmBCSJAQieEX8qFnoJygmeYOjQM437XbwKTWATwPbPVZWyV98s379ig3UDvRT1mGfjOSFayh+othzePEnTMYzg==">
<link rel="stylesheet" media="all" href="./Components - Hide_Show Image_files/application-11aae51317641930eeb93a7f6ccc38b6bc6ecf53c449c0273d59effa73f919a3.css">
<link href="./Components - Hide_Show Image_files/css" rel="stylesheet" type="text/css">
<script src="./Components - Hide_Show Image_files/application-290b9e2f856c15ef7f99c69b163d3e246213cdbe7b19fff57b40e2094d15979c.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-37469895-2']);
_gaq.push(['_trackPageview']);

(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

/* ]]> */
</script>
<style type="text/css">.cf-hidden { display: none; } .cf-invisible { visibility: hidden; }</style><style id="fit-vids-style">.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style><style type="text/css" media="print">.usabilla_live_button_container { display: none; }</style></head>
<body><div id="lightningjs-usabilla_live" style="display: none;"><div><iframe frameborder="0" id="lightningjs-frame-usabilla_live" src="./Components - Hide_Show Image_files/saved_resource.html"></iframe></div></div>
<div class="container">
<div class="row">
<div class="col-xs-12">
<span class="label label-info">Lesson</span>
<span class="label label-primary">Weekend</span>
<ul class="breadcrumb">
<li><a href="https://www.learnhowtoprogram.com/javascript">JavaScript</a></li>
<li><a href="https://www.learnhowtoprogram.com/javascript/ember-js">Ember JS</a></li>
<li class="active">Components - Hide/Show Image</li>
</ul>
<ul class="nav nav-tabs">
<li class="active"><a href="https://www.learnhowtoprogram.com/javascript/ember-js/components-hide-show-image#text" data-toggle="tab">Text</a></li>
</ul>
<div class="tab-content">
<div class="tab-pane active in" id="text">
<h2>Adding a Component</h2>
<p>As a user browses our list of rentals, they'll want additional information to help make a decision. Let's add the ability to hide and show an image for each rental. To do this, we'll use a component.</p>
<p>We'll generate a <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span></code> component that will manage the hide/show behavior for each rental. Component names should be kebab-case (all lowercase separated by a dash). <strong>A dash is <em>required</em> in every component name to avoid possible naming conflicts with HTML elements.</strong> So <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span></code> would be an acceptable component name, but <code class="prettyprint prettyprinted"><span class="pln">rental</span></code> would <em>not</em> be.</p>
<p>We can run the following command to generate a new component: </p>
<pre><code class="prettyprint lang-shell prettyprinted"><span class="pln">$ ember g component rental</span><span class="pun">-</span><span class="pln">tile</span></code></pre>
<p>And we should see: </p>
<pre><code class="prettyprint lang-shell prettyprinted"><span class="pln">version</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2.4</span><span class="pun">.</span><span class="lit">2</span><span class="pln">
installing component
  create app</span><span class="pun">/</span><span class="pln">components</span><span class="pun">/</span><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">js
  create app</span><span class="pun">/</span><span class="pln">templates</span><span class="pun">/</span><span class="pln">components</span><span class="pun">/</span><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">hbs
installing component</span><span class="pun">-</span><span class="pln">test
  create tests</span><span class="pun">/</span><span class="pln">integration</span><span class="pun">/</span><span class="pln">components</span><span class="pun">/</span><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">-</span><span class="pln">test</span><span class="pun">.</span><span class="pln">js</span></code></pre>
<p>As we discussed earlier, a component consists of two parts: A Handlebars template that defines the <em>display</em> (<code class="prettyprint prettyprinted"><span class="pln">app</span><span class="pun">/</span><span class="pln">templates</span><span class="pun">/</span><span class="pln">components</span><span class="pun">/</span><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">hbs</span></code>) and a JavaScript source file that defines how it will <em>behave</em> (<code class="prettyprint prettyprinted"><span class="pln">app</span><span class="pun">/</span><span class="pln">components</span><span class="pun">/</span><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">js</span></code>). Despite residing in different locations, these two files are two sides of the same component. </p>
<p>Since the <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span></code> component will manage how a user sees and interacts with a rental, we will move the contents of the <code class="prettyprint prettyprinted"><span class="pun">{{#</span><span class="pln">each</span><span class="pun">}}</span></code> loop on the index into the <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span></code> template (<code class="prettyprint prettyprinted"><span class="pln">app</span><span class="pun">/</span><span class="pln">templates</span><span class="pun">/</span><span class="pln">components</span><span class="pun">/</span><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">hbs</span></code>). Then, we can render the <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span></code> component inside the loop instead:</p>
<div class="filename">app/templates/index.hbs</div>
<pre><code class="prettyprint prettyprinted"><span class="tag">&lt;h1&gt;</span><span class="pln"> Welcome to Super Rentals </span><span class="tag">&lt;/h1&gt;</span><span class="pln">

We hope you find exactly what you're looking for in a place to stay.

</span><span class="tag">&lt;ul&gt;</span><span class="pln">
  {{#each model as |rental|}}
     {{rental-tile rental=rental}}
  {{/each}}
</span><span class="tag">&lt;/ul&gt;</span><span class="pln">

{{#link-to 'about'}}About{{/link-to}}
{{#link-to 'contact'}}Click here to contact us.{{/link-to}}</span></code></pre>
<p>Here, we're still looping through each rental in the model. But instead of displaying the rental details directly on the index template, we're rendering our new component by calling <code class="prettyprint prettyprinted"><span class="pun">{{</span><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile rental</span><span class="pun">=</span><span class="pln">rental</span><span class="pun">}}</span></code>. </p>
<p>It's important to note that components are <em>completely isolated</em> from their surroundings. They do not automatically have access to models and other information within context of the route in which they are called. Anything a component needs from its surroundings must be passed in manually. In this instance, we are passing the variable <code class="prettyprint prettyprinted"><span class="pln">rental</span></code> to the component and assigning it the value of <code class="prettyprint prettyprinted"><span class="pln">rental</span></code> representing the individual rental object in the current iteration of the loop. That is, we're defining the variable <code class="prettyprint prettyprinted"><span class="pln">rental</span></code> used <em>in the component's file</em> as the model object we're also referring to as <code class="prettyprint prettyprinted"><span class="pln">rental</span></code> during each iteration of the loop, as defined when we state <code class="prettyprint prettyprinted"><span class="pun">{{#</span><span class="pln">each model </span><span class="kwd">as</span><span class="pln"> </span><span class="pun">|</span><span class="pln">rental</span><span class="pun">|}}</span></code>. </p>
<p>To put it briefly, the <code class="prettyprint prettyprinted"><span class="pln">rental</span></code> on the left of the <code class="prettyprint prettyprinted"><span class="pun">=</span></code> refers to the variable name used within the <em>component</em> and the <code class="prettyprint prettyprinted"><span class="pln">rental</span></code> on the right refers to the model object we're assigning this variable to. </p>
<p><em>Note: Declaring "rental=rental" may seem unnecessarily redundant. But by using the same variable name in both the template and component we may consistently use "rental" to refer to the same data whether we're in the template or component files. Any naming convention would work, though. For example:</em></p>
<div class="filename">app/templates/index.hbs</div>
<pre><code class="prettyprint prettyprinted"><span class="pun">…</span><span class="pln">
</span><span class="com"># Example of alternate variable names. This code will *not* be used in the application we're currently creating together! </span><span class="pln">

</span><span class="str">&lt;ul&gt;</span><span class="pln">
  </span><span class="pun">{{#</span><span class="pln">each model </span><span class="kwd">as</span><span class="pln"> </span><span class="pun">|</span><span class="pln">rental</span><span class="pun">-</span><span class="kwd">from</span><span class="pun">-</span><span class="kwd">template</span><span class="pun">|}}</span><span class="pln">
    </span><span class="pun">{{</span><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile rental</span><span class="pun">-</span><span class="kwd">in</span><span class="pun">-</span><span class="pln">component</span><span class="pun">=</span><span class="pln">rental</span><span class="pun">-</span><span class="kwd">from</span><span class="pun">-</span><span class="kwd">template</span><span class="pun">}}</span><span class="pln">
  </span><span class="pun">{{/</span><span class="pln">each</span><span class="pun">}}</span><span class="pln">
</span><span class="pun">&lt;/</span><span class="pln">ul</span><span class="pun">&gt;</span><span class="pln">
</span><span class="pun">…</span></code></pre>
<p>Again, when passing objects into a component the name on the left of <code class="prettyprint prettyprinted"><span class="pun">=</span></code> always refers to the variable name used <em>within the component</em>. The name on the right refers to the object we're assigning to that variable name. In the above example, assume the component uses the variable name <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="kwd">in</span><span class="pun">-</span><span class="pln">component</span></code> within its own template. But here on the index template we call the same rental objects <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="kwd">from</span><span class="pun">-</span><span class="kwd">template</span></code>. Therefore, we have to declare <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="kwd">in</span><span class="pun">-</span><span class="pln">component </span><span class="pun">=</span><span class="pln"> rental</span><span class="pun">-</span><span class="kwd">in</span><span class="pun">-</span><span class="kwd">template</span></code> in order to correctly pass the component the object(s) it needs.</p>
<p>Returning to our project, we'll add code to display rental details in our component:</p>
<div class="filename">app/templates/components/rental-tile.hbs</div>
<pre><code class="prettyprint lang-handlebars prettyprinted"><span class="tag">&lt;li&gt;</span><span class="pln">{{rental.owner}}'s {{rental.type}} in {{rental.city}}</span><span class="tag">&lt;/li&gt;</span></code></pre>
<p>If we refresh the page, we should see that the <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span></code> component is now successfully displaying each rental's details. </p>
<h2>Hiding and Showing an Image with the <code class="prettyprint prettyprinted"><span class="pun">{{</span><span class="pln">action</span><span class="pun">}}</span></code> helper</h2>
<p>Let's also add functionality to hide and show images for each rental. We'll add the following code to <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">hbs</span></code>: </p>
<div class="filename">app/templates/components/rental-tile.hbs</div>
<pre><code class="prettyprint lang-handlebars prettyprinted"><span class="tag">&lt;li&gt;</span><span class="pln">{{rental.owner}}'s {{rental.type}} in {{rental.city}}
    {{#if isImageShowing }}
       </span><span class="tag">&lt;p&gt;&lt;img</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="atv">{{rental.image}}</span><span class="pln"> </span><span class="atn">alt</span><span class="pun">=</span><span class="atv">{{rental.type}}</span><span class="pln"> </span><span class="tag">&gt;&lt;/p&gt;</span><span class="pln">
     {{else}}
       </span><span class="tag">&lt;button&gt;</span><span class="pln">Show image</span><span class="tag">&lt;/button&gt;</span><span class="pln">
    {{/if}}
</span><span class="tag">&lt;/li&gt;</span></code></pre>
<p>Here, we've added a basic <code class="prettyprint prettyprinted"><span class="kwd">if</span></code> statement in Handlebars: When <code class="prettyprint prettyprinted"><span class="pln">isImageShowing</span></code> is set to <code class="prettyprint prettyprinted"><span class="kwd">false</span></code>, the user will see a "Show Image" button. When <code class="prettyprint prettyprinted"><span class="pln">isImageShowing</span></code> is <code class="prettyprint prettyprinted"><span class="kwd">true</span></code>, they'll see a picture of the rental. </p>
<p>The value of <code class="prettyprint prettyprinted"><span class="pln">isImageShowing</span></code> comes from the component's JavaScript file (<code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">js</span></code>). Since the image will be hidden at first, we will set the property to false:</p>
<div class="filename">app/components/rental-tile.js</div>
<pre><code class="prettyprint lang-javascript prettyprinted"><span class="kwd">import</span><span class="pln"> </span><span class="typ">Ember</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'ember'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Ember</span><span class="pun">.</span><span class="typ">Component</span><span class="pun">.</span><span class="pln">extend</span><span class="pun">({</span><span class="pln">
  isImageShowing</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pln">
</span><span class="pun">});</span></code></pre>
<p>For the button to trigger displaying the image, we will use an <strong><a href="http://guides.emberjs.com/v2.0.0/templates/actions/">{{action}} helper</a></strong> in our template and an <strong>action handler</strong> in our component source file. </p>
<p>By default, the <code class="prettyprint prettyprinted"><span class="pun">{{</span><span class="pln">action</span><span class="pun">}}</span></code> helper listens for click events. If we place it on a button, the action we denote will be automatically triggered when that button is clicked: </p>
<div class="filename">app/templates/components/rental-tile.hbs</div>
<pre><code class="prettyprint lang-handlebars prettyprinted"><span class="tag">&lt;li&gt;</span><span class="pln">{{rental.owner}}'s {{rental.type}} in {{rental.city}}
    {{#if isImageShowing }}
       </span><span class="tag">&lt;p&gt;&lt;img</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="atv">{{rental.image}}</span><span class="pln"> </span><span class="atn">alt</span><span class="pun">=</span><span class="atv">{{rental.type}}</span><span class="pln"> </span><span class="tag">&gt;&lt;/p&gt;</span><span class="pln">
     {{else}}
       </span><span class="tag">&lt;button</span><span class="pln"> {{</span><span class="atn">action</span><span class="pln"> </span><span class="atv">'imageShow'</span><span class="pln">}}</span><span class="tag">&gt;</span><span class="pln">Show image</span><span class="tag">&lt;/button&gt;</span><span class="pln">
    {{/if}}
</span><span class="tag">&lt;/li&gt;</span></code></pre>
<p>When the 'Show Image' button in <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">hbs</span></code> is clicked, the <code class="prettyprint prettyprinted"><span class="pln">imageShow</span></code> action defined in <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">js</span></code> will run, setting the<code class="prettyprint prettyprinted"><span class="pln">isImageShowing</span></code> value to <code class="prettyprint prettyprinted"><span class="kwd">true</span></code>. (But we'll code it as false, so it will always be hidden by default until the user clicks the button): </p>
<div class="filename">app/components/rental-tile.js</div>
<pre><code class="prettyprint prettyprinted"><span class="kwd">import</span><span class="pln"> </span><span class="typ">Ember</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'ember'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Ember</span><span class="pun">.</span><span class="typ">Component</span><span class="pun">.</span><span class="pln">extend</span><span class="pun">({</span><span class="pln">
  isImageShowing</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln">
  actions</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    imageShow</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="kwd">set</span><span class="pun">(</span><span class="str">'isImageShowing'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">});</span></code></pre>
<p>When this value is true, the <code class="prettyprint prettyprinted"><span class="pun">{{#</span><span class="kwd">if</span><span class="pun">}}</span></code> statement we added in <code class="prettyprint prettyprinted"><span class="pln">rental</span><span class="pun">-</span><span class="pln">tile</span><span class="pun">.</span><span class="pln">hbs</span></code> will display our image:</p>
<div class="filename">app/templates/components/rental-tile.hbs</div>
<pre><code class="prettyprint lang-handlebars prettyprinted"><span class="tag">&lt;li&gt;</span><span class="pln">{{rental.owner}}'s {{rental.type}} in {{rental.city}}
    {{#if isImageShowing }}
       </span><span class="tag">&lt;p&gt;&lt;img</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="atv">{{rental.image}}</span><span class="pln"> </span><span class="atn">alt</span><span class="pun">=</span><span class="atv">{{rental.type}}</span><span class="pln"> </span><span class="tag">&gt;&lt;/p&gt;</span><span class="pln">
     {{else}}
       </span><span class="tag">&lt;button</span><span class="pln"> {{</span><span class="atn">action</span><span class="pln"> </span><span class="atv">'imageShow'</span><span class="pln">}}</span><span class="tag">&gt;</span><span class="pln">Show image</span><span class="tag">&lt;/button&gt;</span><span class="pln">
    {{/if}}
</span><span class="tag">&lt;/li&gt;</span></code></pre>
<p>We should also let users hide the image again. We'll add another <code class="prettyprint prettyprinted"><span class="pun">{{</span><span class="pln">action</span><span class="pun">}}</span></code> helper with the named event <code class="prettyprint prettyprinted"><span class="pln">imageHide</span></code>. We can bind<code class="prettyprint prettyprinted"><span class="pun">{{</span><span class="pln">action</span><span class="pun">}}</span></code> handlers to any HTML element that is clickable. Here, we'll add it to the image:</p>
<div class="filename">app/templates/components/rental-tile.hbs</div>
<pre><code class="prettyprint lang-handlebars prettyprinted"><span class="tag">&lt;li&gt;</span><span class="pln">{{rental.owner}}'s {{rental.type}} in {{rental.city}}
    {{#if isImageShowing }}
      </span><span class="tag">&lt;p&gt;&lt;img</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="atv">{{rental.image}}</span><span class="pln"> </span><span class="atn">alt</span><span class="pun">=</span><span class="atv">{{rental.type}}</span><span class="pln"> {{</span><span class="atn">action</span><span class="pln"> </span><span class="atv">'imageHide'</span><span class="pln">}}</span><span class="tag">&gt;&lt;/p&gt;</span><span class="pln">
     {{else}}
       </span><span class="tag">&lt;button</span><span class="pln"> {{</span><span class="atn">action</span><span class="pln"> </span><span class="atv">'imageShow'</span><span class="pln">}}</span><span class="tag">&gt;</span><span class="pln">Show image</span><span class="tag">&lt;/button&gt;</span><span class="pln">
    {{/if}}
</span><span class="tag">&lt;/li&gt;</span></code></pre>
<p>In our JavaScript component file, we will add code to hide the image by setting the <code class="prettyprint prettyprinted"><span class="pln">isImageShowing</span></code> property back to <code class="prettyprint prettyprinted"><span class="kwd">false</span></code>:</p>
<div class="filename">app/components/rental-tile.js</div>
<pre><code class="prettyprint prettyprinted"><span class="kwd">import</span><span class="pln"> </span><span class="typ">Ember</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'ember'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Ember</span><span class="pun">.</span><span class="typ">Component</span><span class="pun">.</span><span class="pln">extend</span><span class="pun">({</span><span class="pln">
  isImageShowing</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln">
  actions</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    imageShow</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="kwd">set</span><span class="pun">(</span><span class="str">'isImageShowing'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">},</span><span class="pln">
    imageHide</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="kwd">set</span><span class="pun">(</span><span class="str">'isImageShowing'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">});</span></code></pre>
<p>Below is our 'mapped out' application with these new features. Follow along with the numbered notes to continue to familiarize yourself with the flow of an Ember application: </p>
<p><img src="./Components - Hide_Show Image_files/embercomponentactions.png" alt="ember-application-map-with-component-actions">. </p>
<p></p><hr><p></p>
<p><strong><a href="https://github.com/epicodus-lessons/ember-super-rentals/tree/1.3_components_hide_show_image"><i class="glyphicon glyphicon-folder-open"></i> Example GitHub Repo for Super-Rentals</a></strong></p>
</div>
</div>
</div>
</div>
</div>
<nav class="navbar navbar-default navbar-fixed-top">
<div class="container">
<div class="navbar-header">
<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
<span class="sr-only">Toggle navigation</span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button>
<a class="navbar-brand" href="https://www.learnhowtoprogram.com/courses">Courses</a>
</div>
<div id="navbar" class="collapse navbar-collapse">
<ul class="nav navbar-nav">
<li> </li><li><a href="https://www.learnhowtoprogram.com/javascript/ember-js/ember-data-and-firebase">Previous</a></li>
<li><a href="https://www.learnhowtoprogram.com/javascript/ember-js/components-save-delete">Next</a></li>

</ul>
<ul class="nav navbar-nav pull-right">
<li id="navbar-search">
<form class="navbar-form navbar-left" action="https://www.learnhowtoprogram.com/lessons" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="✓">
<div class="input-group">
<input type="text" name="search" id="search" placeholder="Search lessons" class="form-control">
<div class="input-group-btn">
<input type="submit" name="commit" value="Search" class="btn btn-info">
</div>
</div>
</form> </li>
</ul>
</div>
</div>
</nav>
<footer class="footer">
<div class="container">
<p>© 2016 <a href="http://www.epicodus.com/">Epicodus</a>, Inc.</p>
</div>
</footer>
 
<script type="text/javascript">/*{literal}<![CDATA[*/window.lightningjs||function(c){function g(b,d){d&&(d+=(/\?/.test(d)?"&":"?")+"lv=1");c[b]||function(){var i=window,h=document,j=b,g=h.location.protocol,l="load",k=0;(function(){function b(){a.P(l);a.w=1;c[j]("_load")}c[j]=function(){function m(){m.id=e;return c[j].apply(m,arguments)}var b,e=++k;b=this&&this!=i?this.id||0:0;(a.s=a.s||[]).push([e,b,arguments]);m.then=function(b,c,h){var d=a.fh[e]=a.fh[e]||[],j=a.eh[e]=a.eh[e]||[],f=a.ph[e]=a.ph[e]||[];b&&d.push(b);c&&j.push(c);h&&f.push(h);return m};return m};var a=c[j]._={};a.fh={};a.eh={};a.ph={};a.l=d?d.replace(/^\/\//,(g=="https:"?g:"http:")+"//"):d;a.p={0:+new Date};a.P=function(b){a.p[b]=new Date-a.p[0]};a.w&&b();i.addEventListener?i.addEventListener(l,b,!1):i.attachEvent("on"+l,b);var q=function(){function b(){return["<head></head><",c,' onload="var d=',n,";d.getElementsByTagName('head')[0].",d,"(d.",g,"('script')).",i,"='",a.l,"'\"></",c,">"].join("")}var c="body",e=h[c];if(!e)return setTimeout(q,100);a.P(1);var d="appendChild",g="createElement",i="src",k=h[g]("div"),l=k[d](h[g]("div")),f=h[g]("iframe"),n="document",p;k.style.display="none";e.insertBefore(k,e.firstChild).id=o+"-"+j;f.frameBorder="0";f.id=o+"-frame-"+j;/MSIE[ ]+6/.test(navigator.userAgent)&&(f[i]="javascript:false");f.allowTransparency="true";l[d](f);try{f.contentWindow[n].open()}catch(s){a.domain=h.domain,p="javascript:var d="+n+".open();d.domain='"+h.domain+"';",f[i]=p+"void(0);"}try{var r=f.contentWindow[n];r.write(b());r.close()}catch(t){f[i]=p+'d.write("'+b().replace(/"/g,String.fromCharCode(92)+'"')+'");d.close();'}a.P(2)};a.l&&setTimeout(q,0)})()}();c[b].lv="1";return c[b]}var o="lightningjs",k=window[o]=g(o);k.require=g;k.modules=c}({});
    window.usabilla_live = lightningjs.require("usabilla_live", "//w.usabilla.com/a5a2c64ff5b8.js");
    /*]]>{/literal}*/</script>
 


<div class="usabilla_live_button_container" tabindex="0" aria-hidden="true" style="right:0px;top:50%;margin-top:-65px;position:fixed;width:39px;height:130px;z-index:999"><iframe src="./Components - Hide_Show Image_files/saved_resource(1).html" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" data-tags="right" title="Visual Feedback Button" style="width: 39px; height: 130px; margin: 0px; padding: 0px; border: 0px; overflow: hidden; z-index: 9998; position: absolute; left: 0px; top: 0px; box-shadow: 0px 0px 0px; background-color: transparent;"></iframe></div></body></html>